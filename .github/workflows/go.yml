name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          go get -u golang.org/x/lint/golint
          if [ -f Gopkg.toml ]; then
             curl htps://raw.githubusercontent.com/golang/dep/master/install.sh | sh
             dep ensure
          fi
      - name: Lint
        run: golint
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      CODECOV_TOKEN : ${{ secrets.CodeCov }}
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
          fi
      - name: Test
        run: go test -race -coverprofile=coverage.txt -covermode=atomic
      - name: Upload Coverage
        run: bash <(curl -s https://codecov.io/bash)
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: Build
      run: go build -v .
